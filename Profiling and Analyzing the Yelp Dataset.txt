Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

--SQL CODE USED--

SELECT COUNT(*) as no_of_records
FROM table_name;

-----------------
	
	
	
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id(primary  key): 10000
ii. Hours = business_id(foreign key): 1562
iii. Category = business_id(foreign key): 2643
iv. Attribute = business_id(foreign key): 1115
v. Review = id(primary  key): 10000, business_id(foreign key): 8090, user_id(foreign key): 9581
vi. Checkin = business_id(foreign key): 493
vii. Photo = id(primary  key): 10000, business_id(foreign key): 6493
viii. Tip = user_id(foreign key): 537, business_id(foreign key): 3979
ix. User = id(primary  key): 10000
x. Friend = user_id(foreign key): 11
xi. Elite_years = user_id(foreign key): 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


--SQL CODE USED--

SELECT COUNT(DISTINCT key_name) as distinct_keys
FROM table_name;

-----------------



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
SELECT COUNT(*) AS Col_with_null_values
FROM user
where id is null
or name is null
or review_count is null
or yelping_since is null
or useful is null
or funny is null
or cool is null
or fans is null
or average_stars is null
or compliment_hot is null
or compliment_more is null
or compliment_profile is null
or compliment_cute is null
or compliment_list is null
or compliment_note is null
or compliment_plain is null
or compliment_cool is null
or compliment_funny is null
or compliment_writer is null
or compliment_photos is null;


--SQL Result--

+----------------------+
| Col_with_null_values |
+----------------------+
|                    0 |
+----------------------+
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		

--SQL CODE USED--

select min(column_name) --to get minimum--
from table_name;

select max(column_name) --to get maximum--
from table_name;

select avg(column_name) --to get mean--
from table_name;

-----------------



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

select city,sum(review_count) as total_reviews
from business
group by city
order by total_reviews desc;
	
	
	Copy and Paste the Result Below:
	
+-----------------+---------------+
| city            | total_reviews |
+-----------------+---------------+
| Las Vegas       |         82854 |
| Phoenix         |         34503 |
| Toronto         |         24113 |
| Scottsdale      |         20614 |
| Charlotte       |         12523 |
| Henderson       |         10871 |
| Tempe           |         10504 |
| Pittsburgh      |          9798 |
| Montréal        |          9448 |
| Chandler        |          8112 |
| Mesa            |          6875 |
| Gilbert         |          6380 |
| Cleveland       |          5593 |
| Madison         |          5265 |
| Glendale        |          4406 |
| Mississauga     |          3814 |
| Edinburgh       |          2792 |
| Peoria          |          2624 |
| North Las Vegas |          2438 |
| Markham         |          2352 |
| Champaign       |          2029 |
| Stuttgart       |          1849 |
| Surprise        |          1520 |
| Lakewood        |          1465 |
| Goodyear        |          1155 |
+-----------------+---------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer: 	

SELECT stars AS Star_Rating,COUNT(stars) AS Count
FROM business
WHERE city="Avon"
GROUP BY stars
ORDER BY stars DESC;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| Star_Rating | Count |
+-------------+-------+
|         5.0 |     1 |
|         4.5 |     1 |
|         4.0 |     2 |
|         3.5 |     3 |
|         2.5 |     2 |
|         1.5 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars AS Star_Rating,COUNT(stars) AS Count
FROM business
WHERE city="Beachwood"
GROUP BY stars
ORDER BY stars DESC;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| Star_Rating | Count |
+-------------+-------+
|         5.0 |     5 |
|         4.5 |     2 |
|         4.0 |     1 |
|         3.5 |     2 |
|         3.0 |     2 |
|         2.5 |     1 |
|         2.0 |     1 |
+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT id,name,review_count
FROM user
GROUP BY id
ORDER BY review_count DESC
LIMIT 3;
	
		
	Copy and Paste the Result Below:
		
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: 
	
    Findings of Table-1: 

    By sorting the table by fans descending, we can see that the users who have the most fans sometimes have fewer review_count than other users.
    For example; Amy, who has the most fans, only has 609 reviews. Yuri has only 76 fans, but has the 
    third most reviews(We notice this from the previous question). Some other factors should also be considered.

    Findings of Table-2:

    Also by sorting review_count descending and observe the same situation.
    In this case we observe that Mimi has 497 fans and only posted 968 reviews while Sara and Gerald posted more reviews and still have less fans.

    Interpretation:

    The findings of two tables illustrate that, posing reviews and fans do not necessarily have a positive correlation.
    Hence, posing more reviews Not necessarily correlated with more fans.

	
--SQL CODE USED to get Table-1--

SELECT id,name,review_count,fans
FROM user
ORDER BY fans desc;


--SQL Result Table-1--

+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 |
+------------------------+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)


--SQL CODE USED to get Table-2--

SELECT id,name,review_count,fans
FROM user
ORDER BY review_count desc;


--SQL Result Table-2--

+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -AaBjWJYiQxXkCMDlXfPGw | Tim       |          702 |   35 |
| -jt1ACMiZljnBFvS6RRvnA | L         |          696 |   10 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -hxUwfo3cMnLTv-CAaP69A | Crissy    |          676 |   25 |
| -H6cTbVxeIRYR-atxdielQ | Lyn       |          675 |   45 |
+------------------------+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
	
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are 1780 reviews with “love” and 232 reviews with “hate”.
	        Hence, There are more reviews with the word "love".


	SQL code used to arrive at answer:
	
--SQL CODE USED to get the count of reviews with the word "love"--
SELECT COUNT(*) AS like_count
FROM review
WHERE text LIKE "%love%";

--SQL Result--

+------------+
| like_count |
+------------+
|       1780 |
+------------+


--SQL CODE USED to get the count of reviews with the word "hate"--

SELECT COUNT(*) AS hate_count
FROM review
WHERE text LIKE "%hate%";

--SQL Result--

+------------+
| hate_count |
+------------+
|        232 |
+------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT name,fans
FROM user
ORDER BY fans DESC
LIMIT 10;
	
	
	Copy and Paste the Result Below:
	
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	For this question, I picked city = "Las Vegas" and category = "Food".
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	Answer: Yes.
	        The business with 2.5 stars opens 8:00 hours on Saturday and closes 22:00 hours.
	        But the business with higher star ratings(4 stars) opens lately on Saturdays (10:00 hours).
			Also, it closes first(19:00 hours) than the business group with 2.5 stars.
 
 
ii. Do the two groups you chose to analyze have a different number of reviews?

	Answer: Yes.
	        Business group with 4 stars have more review count(30) than the business group with 2.5 stars(6 review count).


iii. Are you able to infer anything from the location data provided between these two groups? Explain.

	Answer: Yes. The two business groups are located at different adresses and postal_codes.
	
	        Based on the address and postal_code we can find the location of the two business groups.
			The business group with less star ratings is located at 3808 E Tropicana Ave and the other 
			business group with more star ratings is located at 8975 S Eastern Ave, Ste 3-B.
	
sql code used for analysis:

SELECT 
business.name, business.city, category.category, business.stars, hours.hours,
business.review_count,
business.address, business.postal_code
FROM (business INNER JOIN category ON business.id = 
category.business_id) INNER JOIN hours ON hours.business_id = 
business.id
WHERE business.city = "Las Vegas" AND category.category = "Food"
GROUP BY business.stars;


The results from SQL is given below:

+-----------------------------+-----------+----------+-------+----------------------+--------------+-----------------------------+-------------+
| name                        | city      | category | stars | hours                | review_count | address                     | postal_code |
+-----------------------------+-----------+----------+-------+----------------------+--------------+-----------------------------+-------------+
| Walgreens                   | Las Vegas | Food     |   2.5 | Saturday|8:00-22:00  |            6 | 3808 E Tropicana Ave        | 89121       |
| Sweet Ruby Jane Confections | Las Vegas | Food     |   4.0 | Saturday|10:00-19:00 |           30 | 8975 S Eastern Ave, Ste 3-B | 89123       |
+-----------------------------+-----------+----------+-------+----------------------+--------------+-----------------------------+-------------+

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    
     The DB has data on 10000 businesses out of which 8480 are open and the remaining 1520 are closed.
    
ii. Difference 2:
         
	 The business that are still open have high average star ratings (2.96) than businesses that are closes (closed businesses have average star rating of 2).        
     The business that are still open have more reviews(504) on than ones that are closed(Closed businesses have only 4 reviews).
	 

SQL code used for analysis:


Difference 1:

-- count open businesses
SELECT count(is_open) AS n_Open
from business
Where is_open=1;

-- count closed businesses
SELECT count(is_open)AS n_Closed
from business
Where is_open=0;


The results from SQL is given below:

+--------+
| n_Open |
+--------+
|   8480 |
+--------+

+----------+
| n_Closed |
+----------+
|     1520 |
+----------+


Difference 2:

SELECT 
AVG(b.stars) AS Average_Stars,
SUM(b.review_count) AS Total_Reviews,
AVG(b.review_count) AS Average_Review_Count,
b.is_open
FROM business b INNER JOIN review r ON b.id = r.id
GROUP BY b.is_open

The results from SQL is given below:

+--------------------+---------------+----------------------+---------+
|      Average_Stars | Total_Reviews | Average_Review_Count | is_open |
+--------------------+---------------+----------------------+---------+
|                2.0 |             4 |                  4.0 |       0 |
| 2.9615384615384617 |           504 |    38.76923076923077 |       1 |
+--------------------+---------------+----------------------+---------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    
	Determine if there is a correlation between category and star rating within a city 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
     I joined the data from the business table with the categories table to see if a business category 
	 has a impact on stars (or viceversa) in the city of "Las Vegas".
	 
	 I also pulled review_count and is_open as this factor may affect the analysis.
	 
iii. Output of your finished dataset:
         
+-----------+---------------------------------+-------+--------------+---------+
| city      | category                        | stars | review_count | is_open |
+-----------+---------------------------------+-------+--------------+---------+
| Las Vegas | Beauty & Spas                   |   5.0 |            3 |       1 |
| Las Vegas | Chiropractors                   |   5.0 |            5 |       1 |
| Las Vegas | Doctors                         |   5.0 |            5 |       1 |
| Las Vegas | Hair Salons                     |   5.0 |            3 |       1 |
| Las Vegas | Health & Medical                |   5.0 |            5 |       1 |
| Las Vegas | Heating & Air Conditioning/HVAC |   5.0 |            7 |       1 |
| Las Vegas | Medical Supplies                |   5.0 |            4 |       1 |
| Las Vegas | Pain Management                 |   5.0 |            5 |       1 |
| Las Vegas | Physical Therapy                |   5.0 |            5 |       1 |
| Las Vegas | Shopping                        |   5.0 |            4 |       1 |
| Las Vegas | Solar Installation              |   5.0 |            7 |       1 |
| Las Vegas | Active Life                     |   4.5 |           32 |       1 |
| Las Vegas | Community Service/Non-Profit    |   4.5 |           32 |       1 |
| Las Vegas | Education                       |   4.5 |           32 |       1 |
| Las Vegas | Flowers & Gifts                 |   4.5 |           32 |       1 |
| Las Vegas | Gift Shops                      |   4.5 |           32 |       1 |
| Las Vegas | Hiking                          |   4.5 |           32 |       1 |
| Las Vegas | Hotels & Travel                 |   4.5 |           32 |       1 |
| Las Vegas | Japanese                        |   4.5 |            3 |       0 |
| Las Vegas | Local Services                  |   4.5 |           32 |       1 |
| Las Vegas | Parks                           |   4.5 |           32 |       1 |
| Las Vegas | Professional Services           |   4.5 |           32 |       1 |
| Las Vegas | Restaurants                     |   4.5 |            3 |       0 |
| Las Vegas | Special Education               |   4.5 |           32 |       1 |
| Las Vegas | Travel Services                 |   4.5 |           32 |       1 |
+-----------+---------------------------------+-------+--------------+---------+
(Output limit exceeded, 25 of 64 total rows shown)

iv. Provide the SQL code you used to create your final dataset:

SELECT b.city,c.category, b.stars, b.review_count, b.is_open 
FROM business b 
LEFT JOIN category c
ON b.id = c.business_id
WHERE b.city = "Las Vegas"
GROUP BY c.category
ORDER BY b.stars DESC;
